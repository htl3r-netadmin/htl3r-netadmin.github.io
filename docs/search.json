[{"fullname": "netadmin-service", "modulename": "netadmin-service", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "netadmin-service.api", "modulename": "netadmin-service.api", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "netadmin-service.api.endpoint", "modulename": "netadmin-service.api", "qualname": "endpoint", "type": "function", "doc": "<p>Decorator that applies the correct header to the responses</p>\n", "parameters": ["func"], "funcdef": "def"}, {"fullname": "netadmin-service.api.devices", "modulename": "netadmin-service.api", "qualname": "devices", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, {"fullname": "netadmin-service.api.generate_devices", "modulename": "netadmin-service.api", "qualname": "generate_devices", "type": "function", "doc": "<p>Generates a json-string with randomly generated devices for testing purposes as long as there is no \"real\" data</p>\n\n<p>:param count: number of devices to generate\n:return: json of generated devices</p>\n", "parameters": ["count"], "funcdef": "def"}, {"fullname": "netadmin-service.api.run", "modulename": "netadmin-service.api", "qualname": "run", "type": "function", "doc": "<p>Start the HTTP API</p>\n\n<p>:param host: IP or domainname where the api will run on\n:param port: Port where the api will run on\n:param debug: run Flask in debugmode\n:return: None</p>\n", "parameters": ["host", "port", "debug"], "funcdef": "def"}, {"fullname": "netadmin-service.classes", "modulename": "netadmin-service.classes", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "netadmin-service.classes.Database", "modulename": "netadmin-service.classes.Database", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "netadmin-service.classes.Database.Database", "modulename": "netadmin-service.classes.Database", "qualname": "Database", "type": "class", "doc": "<p>A Database class which handles DB connections and exceptions</p>\n"}, {"fullname": "netadmin-service.classes.Database.Database.__init__", "modulename": "netadmin-service.classes.Database", "qualname": "Database.__init__", "type": "function", "doc": "<p>Creates a Database connection with the following arguments:</p>\n\n<ul>\n<li><code>username</code> specifies the database username</li>\n<li><code>password</code> specifies the database password</li>\n<li><code>name</code> specifies the database name</li>\n<li><code>hostname</code> specifies the hostname the database is running on</li>\n<li><code>port</code> specifies the port the database is running on</li>\n<li><code>exit_on_fail</code> if this switch is set, exit if the database is not running, default false</li>\n</ul>\n", "parameters": ["self", "username", "password", "name", "hostname", "port", "exit_on_fail"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.Database.Exception", "modulename": "netadmin-service.classes.Database", "qualname": "Database.Exception", "type": "variable", "doc": "<p>An exception or a list of exception which might occur while making operations with the Database</p>\n"}, {"fullname": "netadmin-service.classes.Database.Database.table", "modulename": "netadmin-service.classes.Database", "qualname": "Database.table", "type": "function", "doc": "<p>Get a table in the database\nBecause CouchDB does not support tables, all tables are prefixed with the database name <code>self.name</code>\nThe final table name therefore is <code>self.name</code>-<code>table_name</code>\nIf <code>pure</code> is True, the final table name is <code>table_name</code></p>\n", "parameters": ["self", "table_name", "pure"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.Database.delete", "modulename": "netadmin-service.classes.Database", "qualname": "Database.delete", "type": "function", "doc": "<p>Delete the current Database</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.Database.drop", "modulename": "netadmin-service.classes.Database", "qualname": "Database.drop", "type": "function", "doc": "<p>Delete the current Database</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.Database.stats", "modulename": "netadmin-service.classes.Database", "qualname": "Database.stats", "type": "variable", "doc": "<p>Contains Database stats</p>\n"}, {"fullname": "netadmin-service.classes.Database.Database.up", "modulename": "netadmin-service.classes.Database", "qualname": "Database.up", "type": "variable", "doc": "<p>Check if Database is up and running</p>\n"}, {"fullname": "netadmin-service.classes.Database.Table", "modulename": "netadmin-service.classes.Database", "qualname": "Table", "type": "class", "doc": "<p>Represents a Table in a Database\nThis class should never be called by the user, only by the <code>Database</code> class</p>\n"}, {"fullname": "netadmin-service.classes.Database.Table.__init__", "modulename": "netadmin-service.classes.Database", "qualname": "Table.__init__", "type": "function", "doc": "<p>Initialize the table</p>\n\n<ul>\n<li><code>server</code> is a CouchDB instance</li>\n<li><code>table_name</code> specifies the table name</li>\n</ul>\n", "parameters": ["self", "server", "table_name"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.Table.get", "modulename": "netadmin-service.classes.Database", "qualname": "Table.get", "type": "function", "doc": "<p>Get a document from the current table by <code>id</code></p>\n", "parameters": ["self", "id"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.Table.all", "modulename": "netadmin-service.classes.Database", "qualname": "Table.all", "type": "function", "doc": "<p>Return all documents from the current table</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.Table.insert", "modulename": "netadmin-service.classes.Database", "qualname": "Table.insert", "type": "function", "doc": "<p>Insert a document in the current table</p>\n", "parameters": ["self", "document"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.Table.filter", "modulename": "netadmin-service.classes.Database", "qualname": "Table.filter", "type": "function", "doc": "<p>THE USE OF THIS FUNCTION IS DISCOURAGED! USE FIND INSTEAD!\nFilters a table\n<code>filter</code> can be either a lamba or object\nReturns a list of all documents that match</p>\n", "parameters": ["self", "filter"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.Table.find", "modulename": "netadmin-service.classes.Database", "qualname": "Table.find", "type": "function", "doc": "<p>Find documents by a <a href=\"https://pouchdb.com/guides/mango-queries.html\">Mango query</a></p>\n", "parameters": ["self", "filter"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.Table.delete", "modulename": "netadmin-service.classes.Database", "qualname": "Table.delete", "type": "function", "doc": "<p>Delete a document from the table</p>\n", "parameters": ["self", "document"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.Table.drop", "modulename": "netadmin-service.classes.Database", "qualname": "Table.drop", "type": "function", "doc": "<p>Drop the current table</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.Table.entries", "modulename": "netadmin-service.classes.Database", "qualname": "Table.entries", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "netadmin-service.classes.Database.Table.size", "modulename": "netadmin-service.classes.Database", "qualname": "Table.size", "type": "variable", "doc": "<p>Return the size of the current table in bytes</p>\n"}, {"fullname": "netadmin-service.classes.Database.DocumentList", "modulename": "netadmin-service.classes.Database", "qualname": "DocumentList", "type": "class", "doc": "<p>A list of object with various additional features\nThis class should never be called by the user, only by the <code>Table</code> class</p>\n"}, {"fullname": "netadmin-service.classes.Database.DocumentList.__init__", "modulename": "netadmin-service.classes.Database", "qualname": "DocumentList.__init__", "type": "function", "doc": "<p>Initialize an empty DocumentList</p>\n\n<ul>\n<li><code>table</code> is a <code>Table</code> object which got called by <code>Database</code></li>\n</ul>\n", "parameters": ["self", "table"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.DocumentList.add", "modulename": "netadmin-service.classes.Database", "qualname": "DocumentList.add", "type": "function", "doc": "<p>Add a document to the DocumentList</p>\n", "parameters": ["self", "item"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.DocumentList.set", "modulename": "netadmin-service.classes.Database", "qualname": "DocumentList.set", "type": "function", "doc": "<p>Update a document, the document needs to contain an _id and _rev (CouchDB internals)</p>\n", "parameters": ["self", "new_document"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.DocumentList.update", "modulename": "netadmin-service.classes.Database", "qualname": "DocumentList.update", "type": "function", "doc": "<p>Update all documents using a function or a dictionary with updated keys\nThe if a function is passed, the object the function returns is used,\nelse the merged dictionaries</p>\n", "parameters": ["self", "modify_function_or_new_object"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.DocumentList.delete", "modulename": "netadmin-service.classes.Database", "qualname": "DocumentList.delete", "type": "function", "doc": "<p>Delete all documents in the current DocumentList</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.DocumentList.sort", "modulename": "netadmin-service.classes.Database", "qualname": "DocumentList.sort", "type": "function", "doc": "<p>Sort all documents in the current DocumentList by a given <code>keyname</code></p>\n", "parameters": ["self", "keyname"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.DocumentList.reverse", "modulename": "netadmin-service.classes.Database", "qualname": "DocumentList.reverse", "type": "function", "doc": "<p>Reverse the current DocumentList</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Database.DocumentList.found", "modulename": "netadmin-service.classes.Database", "qualname": "DocumentList.found", "type": "variable", "doc": "<p>Check if the Table query returned any results (length of the current DocumentList is not 0)</p>\n"}, {"fullname": "netadmin-service.classes.Device", "modulename": "netadmin-service.classes.Device", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "netadmin-service.classes.Device.Device", "modulename": "netadmin-service.classes.Device", "qualname": "Device", "type": "class", "doc": "<p>Device representing Topology devices</p>\n"}, {"fullname": "netadmin-service.classes.Device.Device.__init__", "modulename": "netadmin-service.classes.Device", "qualname": "Device.__init__", "type": "function", "doc": "<p>Initialize a new device with the given Parameters\n:param ip: ip address used to establish a connection to the device and monitor it\n:param username: username used to login on the device\n:param password: password used to login on the device\n:param connection_type: defines the type of remote-connection (ssh/telnet)\n:param jumping_hosts: used to define one or multiple jumping hosts if needed</p>\n", "parameters": ["self", "ip", "username", "password", "connection_type", "jumping_hosts"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Device.Device.load_config", "modulename": "netadmin-service.classes.Device", "qualname": "Device.load_config", "type": "function", "doc": "<p>Load config from device and store into the database\nReturns False on SSH error and the configuration on success</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Device.Device.save", "modulename": "netadmin-service.classes.Device", "qualname": "Device.save", "type": "function", "doc": "<p>Save the current device object into the database</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Device.Device.is_up", "modulename": "netadmin-service.classes.Device", "qualname": "Device.is_up", "type": "function", "doc": "<p>Checks if the device is up.\nReturn <code>True</code> on reachable, <code>False</code> on any error that might occur</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Device.Device.ping_loop", "modulename": "netadmin-service.classes.Device", "qualname": "Device.ping_loop", "type": "function", "doc": "<p>Start a blocking ping loop\nCheck if the device is reachable and push status changes to the database</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Device.Device.load", "modulename": "netadmin-service.classes.Device", "qualname": "Device.load", "type": "function", "doc": "<p>Load a device from the database given its id</p>\n", "parameters": ["id"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Exiter", "modulename": "netadmin-service.classes.Exiter", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "netadmin-service.classes.Exiter.Exiter", "modulename": "netadmin-service.classes.Exiter", "qualname": "Exiter", "type": "class", "doc": "<p>The Exiter class runs a given script as long as no keyboard interrupt or other exceptions occured</p>\n"}, {"fullname": "netadmin-service.classes.Exiter.Exiter.__init__", "modulename": "netadmin-service.classes.Exiter", "qualname": "Exiter.__init__", "type": "function", "doc": "<p>Initialize the Exiter class</p>\n\n<ul>\n<li><code>on_exit_fn</code> is a callable which gets added to the <code>exit_fn_list</code> and gets called whenever the parent or current process stops</li>\n<li><code>args</code> specifies args which should be passed to the <code>on_exit_fn</code></li>\n</ul>\n", "parameters": ["self", "on_exit_fn", "args"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Exiter.Exiter.running", "modulename": "netadmin-service.classes.Exiter", "qualname": "Exiter.running", "type": "variable", "doc": "<p>Specifies if the got stopped by the user or not.\nAs long as <code>running</code> is True, the script may continue running\nIf <code>running</code> is False, the script knows its parent process or itself got stopped and can safely exit</p>\n"}, {"fullname": "netadmin-service.classes.Exiter.Exiter.exit_fn_list", "modulename": "netadmin-service.classes.Exiter", "qualname": "Exiter.exit_fn_list", "type": "variable", "doc": "<p>Contains a list of callbacks which get executed when the script stops</p>\n"}, {"fullname": "netadmin-service.classes.Exiter.Exiter.exit_fn", "modulename": "netadmin-service.classes.Exiter", "qualname": "Exiter.exit_fn", "type": "function", "doc": "<p>A callback function for the signal.signal handlers</p>\n", "parameters": ["signum", "frame"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Logging", "modulename": "netadmin-service.classes.Logging", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "netadmin-service.classes.Logging.Logger", "modulename": "netadmin-service.classes.Logging", "qualname": "Logger", "type": "class", "doc": "<p>This is a class that lets you create and Print Error, Warning and Info Messages</p>\n"}, {"fullname": "netadmin-service.classes.Logging.Logger.__init__", "modulename": "netadmin-service.classes.Logging", "qualname": "Logger.__init__", "type": "function", "doc": "<p>This class lets you create a Message and\n:param sourceFile: Die Source der Message -> nur f\u00fcr Protokollierung relevant</p>\n", "parameters": ["self", "sourceFile"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Logging.Logger.error", "modulename": "netadmin-service.classes.Logging", "qualname": "Logger.error", "type": "function", "doc": "<p>Create a error level message.\n:param message: Define the message thaw will be saved/printed.\n:return: Tuple with Timestamp, Source (in Konstruktor angegeben), Log levels, Message.</p>\n", "parameters": ["self", "message"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Logging.Logger.setPrintToConsole", "modulename": "netadmin-service.classes.Logging", "qualname": "Logger.setPrintToConsole", "type": "function", "doc": "<p>Set if you want to print Message Info on creation.\n:param val: True or False -> Print/ don't Print</p>\n", "parameters": ["self", "val"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Logging.Logger.info", "modulename": "netadmin-service.classes.Logging", "qualname": "Logger.info", "type": "function", "doc": "<p>Create a info level message.\n:param message: Define the message thaw will be saved/printed.\n:return: Tuple with Timestamp, Source (in Konstruktor angegeben), Log levels, Message.</p>\n", "parameters": ["self", "message"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Logging.Logger.warning", "modulename": "netadmin-service.classes.Logging", "qualname": "Logger.warning", "type": "function", "doc": "<p>Create a warning level message.\n:param message: Define the message thaw will be saved/printed.\n:return: Tuple with Timestamp, Source (in Konstruktor angegeben), Log levels, Message.</p>\n", "parameters": ["self", "message"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.SSH", "modulename": "netadmin-service.classes.SSH", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "netadmin-service.classes.SSH.SSH", "modulename": "netadmin-service.classes.SSH", "qualname": "SSH", "type": "class", "doc": "<p>An SSH Connection class to connect to Routers or Switches and execute command line tasks</p>\n"}, {"fullname": "netadmin-service.classes.SSH.SSH.__init__", "modulename": "netadmin-service.classes.SSH", "qualname": "SSH.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "host", "username", "password"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.SSH.SSH.connect", "modulename": "netadmin-service.classes.SSH", "qualname": "SSH.connect", "type": "function", "doc": "<p>Connect to the device</p>\n", "parameters": ["self", "timeout"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.SSH.SSH.host_down", "modulename": "netadmin-service.classes.SSH", "qualname": "SSH.host_down", "type": "function", "doc": "<p>Checks if the server is unreachable\nTakes 1s at most!</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.SSH.SSH.disconnect", "modulename": "netadmin-service.classes.SSH", "qualname": "SSH.disconnect", "type": "function", "doc": "<p>Disconnect from the device</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.SSH.SSH.execute", "modulename": "netadmin-service.classes.SSH", "qualname": "SSH.execute", "type": "function", "doc": "<p>Execute a shell command on the device</p>\n", "parameters": ["self", "command"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Telnet", "modulename": "netadmin-service.classes.Telnet", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "netadmin-service.classes.Telnet.Telnet", "modulename": "netadmin-service.classes.Telnet", "qualname": "Telnet", "type": "class", "doc": "<p>A Telnet Connection class to connect to Routers or Switches and execute command line tasks</p>\n"}, {"fullname": "netadmin-service.classes.Telnet.Telnet.__init__", "modulename": "netadmin-service.classes.Telnet", "qualname": "Telnet.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ip", "username", "password"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Telnet.Telnet.connect", "modulename": "netadmin-service.classes.Telnet", "qualname": "Telnet.connect", "type": "function", "doc": "<p>Connect to the device</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Telnet.Telnet.disconnect", "modulename": "netadmin-service.classes.Telnet", "qualname": "Telnet.disconnect", "type": "function", "doc": "<p>Disconnect from the Device.</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Telnet.Telnet.host_down", "modulename": "netadmin-service.classes.Telnet", "qualname": "Telnet.host_down", "type": "function", "doc": "<p>Checks if the device is reachable.</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "netadmin-service.classes.Telnet.Telnet.execute", "modulename": "netadmin-service.classes.Telnet", "qualname": "Telnet.execute", "type": "function", "doc": "<p>Execute a shell command on the device\n:param command: The command to be executed on the device.</p>\n", "parameters": ["self", "command"], "funcdef": "def"}]